-- CREATE TABLE Picture (
--   id INTEGER NOT NULL PRIMARY KEY,
--   title VARCHAR(255) NOT NULL,
--   url TEXT NOT NULL,
--   languageID TINYINT UNSIGNED,
--   userID MEDIUMINT UNSIGNED NOT NULL,
--   rating MEDIUMINT NOT NULL DEFAULT 0,
--   creationDate DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
--
-- --   FOREIGN KEY (id) REFERENCES ContentRegister(id)
-- --       ON DELETE CASCADE
-- --       ON UPDATE CASCADE,
-- --
-- --   FOREIGN KEY (languageID) REFERENCES Language(id),
-- --
-- --   FOREIGN KEY (userID) REFERENCES User(id)
-- );



selectAllByID:
SELECT
    *
FROM
    Picture
WHERE
    Picture.id = :id;



selectPictureByID:
SELECT
    ContentRegister.id AS registerID
FROM
    ContentRegister
WHERE
    ContentRegister.id = :registerID;



-- selectPictureByID:
-- SELECT
--     ContentRegister.id AS registerID,
--     Picture.title AS title,
--     Picture.url AS url,
--     Picture.languageID AS lang1ID,
--     Picture.rating AS rating,
--     LanguageTranslation.langId AS availableLanguageID,
--     LanguageTranslation.translation AS availableLanguageTranslation,
--     LanguageTranslation.envID AS availableLanguageEnvID,
--     Author.id AS authorID,
--     Author.name AS authorName,
--     User.id AS userID,
--     User.name AS userName,
--     Tag.id AS tagID,
--     TagTranslation.langID AS tagLangID,
--     TagTranslation.translation AS tagTranslation,
--     (SELECT COUNT(*) FROM Comment WHERE Comment.id = ContentRegister.id) AS commentsCount
-- FROM ContentRegister
-- LEFT OUTER JOIN Picture ON ContentRegister.contentID = Picture.id
-- LEFT OUTER JOIN User ON User.id = Picture.userID
-- LEFT OUTER JOIN RelationPictureAndAuthor ON RelationPictureAndAuthor.imageID = Picture.id
-- LEFT OUTER JOIN Author ON Author.id = RelationPictureAndAuthor.authorID
-- LEFT OUTER JOIN RelationPictureAndTag ON RelationPictureAndTag.imageID = Picture.id
-- LEFT OUTER JOIN Tag ON RelationPictureAndTag.tagID = Tag.id
-- LEFT OUTER JOIN RelationTagAndTranslation ON RelationTagAndTranslation.tagID = Tag.id
-- LEFT OUTER JOIN TagTranslation ON TagTranslation.id = RelationTagAndTranslation.translationID
-- LEFT OUTER JOIN RelationPictureAndLanguage ON RelationPictureAndLanguage.imageID = Picture.id
-- LEFT OUTER JOIN Language ON Language.id = RelationPictureAndLanguage.langID
-- LEFT OUTER JOIN LanguageTranslation ON LanguageTranslation.langId = Language.id
-- WHERE ContentRegister.id = ?;


-- selectPictureByID2:
-- SELECT JSON_ARRAYARG(JSON_OBJECT('id', "")) FROM ContentRegister

selectPictureByID1:
SELECT
    ContentRegister.id AS registerID,
    Picture.title AS title,
    Picture.url AS url,
    Picture.languageID AS baseLanguageID,
    Picture.rating AS rating,
    RelationPictureAndLanguage.langID AS abailableAvailableLanguageID,
    AuthorsJoin.authorID AS authorID,
    AuthorsJoin.authorName AS authorName,
    User.id AS userID,
    User.name AS userName,
    TagsJoin.tagID AS tagID,
    TagsJoin.tagLangID AS tagLangID,
    TagsJoin.tagTranslation AS tagTranslation,
    (SELECT COUNT(*) FROM Comment WHERE Comment.id = ContentRegister.id) AS commentsCount

FROM
    ContentRegister
JOIN
    Picture ON ContentRegister.id = Picture.id
JOIN
    User ON User.id = Picture.userID

-- Read authors
LEFT JOIN (
    SELECT
        Author.id AS authorID,
        Author.name AS authorName
    FROM
        RelationPictureAndAuthor
    JOIN
        Author
        ON
        RelationPictureAndAuthor.id = Author.id
    WHERE
        RelationPictureAndAuthor.pictureID = :registerID
) AS AuthorsJoin

-- Read tags
LEFT JOIN (
    SELECT
        RelationPictureAndTag.tagID AS tagID,
        TagTranslation.envID AS tagLangID,
        TagTranslation.translation AS tagTranslation
    FROM
        RelationPictureAndTag
    JOIN
        TagTranslation
    ON
        TagTranslation.tagID = RelationPictureAndTag.tagID
    WHERE
        RelationPictureAndTag.pictureID = :registerID
) AS TagsJoin


-- LEFT JOIN
--     RelationPictureAndAuthor
--     ON
--     RelationPictureAndAuthor.pictureID = Picture.id
-- JOIN
--     Author
--     ON
--     Author.id = RelationPictureAndAuthor.authorID

-- Read tags
-- LEFT JOIN
--     RelationPictureAndTag
--     ON
--     RelationPictureAndTag.pictureID = Picture.id
-- LEFT JOIN
--     TagTranslation ON TagTranslation.tagID = RelationPictureAndTag.tagID


-- Read languages
LEFT JOIN
    RelationPictureAndLanguage
    ON
    RelationPictureAndLanguage.pictureID = Picture.id
WHERE
    ContentRegister.id = :registerID;



selectPictureBaseInfoByID:
SELECT
    ContentRegister.id AS registerID,
    Picture.title AS title,
    Picture.url AS url,
    Picture.languageID AS baseLanguageID,
    Picture.rating AS rating,
    User.id AS userID,
    User.name AS userName,
    (SELECT COUNT(*) FROM Comment WHERE Comment.id = ContentRegister.id) AS commentsCount
FROM
    ContentRegister
JOIN
    Picture ON ContentRegister.id = Picture.id
JOIN
    User ON User.id = Picture.userID
WHERE
    Picture.id = :registerID;



selectPictureBaseInfoListByID:
SELECT
    ContentRegister.id AS registerID,
    Picture.title AS title,
    Picture.url AS url,
    Picture.languageID AS baseLanguageID,
    Picture.rating AS rating,
    User.id AS userID,
    User.name AS userName,
    (SELECT COUNT(*) FROM Comment WHERE Comment.id = ContentRegister.id) AS commentsCount
FROM
    ContentRegister
JOIN
    Picture ON ContentRegister.id = Picture.id
JOIN
    User ON User.id = Picture.userID
WHERE
    Picture.id IN :pictureRegisterIDList;



selectLastBaseInfoList:
SELECT
    ContentRegister.id AS registerID,
    Picture.title AS title,
    Picture.url AS url,
    User.id AS userID,
    User.name AS userName,
    Picture.languageID AS baseLanguageID,
    Picture.rating AS rating,
    (SELECT COUNT(*) FROM Comment WHERE Comment.contentID = ContentRegister.id) AS commentsCount
FROM
    ContentRegister
JOIN
    Picture ON ContentRegister.id = Picture.id
JOIN
    User ON User.id = Picture.userID
WHERE
    ContentRegister.contentType = 1
ORDER BY
    ContentRegister.id DESC
LIMIT
    :limit
OFFSET
    :offset;


selectLastBaseInfoListWithLangID:
SELECT
    ContentRegister.id AS registerID,
    Picture.title AS title,
    Picture.url AS url,
    User.id AS userID,
    User.name AS userName,
    Picture.languageID AS baseLanguageID,
    Picture.rating AS rating,
    (SELECT COUNT(*) FROM Comment WHERE Comment.contentID = ContentRegister.id) AS commentsCount
FROM
    ContentRegister
JOIN
    Picture ON ContentRegister.id = Picture.id
JOIN
    User ON User.id = Picture.userID
WHERE
    ContentRegister.contentType = 1
    AND
    Picture.languageID = :langID
ORDER BY
    ContentRegister.id DESC
LIMIT
    :limit
OFFSET
    :offset;



selectPicturesAuthorList:
SELECT
    RelationPictureAndAuthor.pictureID AS pictureID,
    Author.id AS authorID,
    Author.name AS authorName
FROM
    RelationPictureAndAuthor
JOIN
    Author
    ON
    RelationPictureAndAuthor.authorID = Author.id
WHERE
    RelationPictureAndAuthor.pictureID IN :pictiresIDList
ORDER BY
    Author.id DESC;



selectPicturesAvailableLanguageList:
SELECT
    RelationPictureAndLanguage.pictureID AS pictureID,
    RelationPictureAndLanguage.langID AS abailableLanguageID
FROM
    RelationPictureAndLanguage
WHERE
    RelationPictureAndLanguage.pictureID IN :pictiresIDList;



selectPicturesTagList:
SELECT
    RelationPictureAndTag.pictureID AS pictureID,
    RelationPictureAndTag.tagID AS tagID,
    TagTranslation.envID AS tagLangID,
    TagTranslation.translation AS tagTranslation
FROM
    RelationPictureAndTag
JOIN
    TagTranslation
ON
    TagTranslation.tagID = RelationPictureAndTag.tagID
WHERE
    RelationPictureAndTag.pictureID IN :picturesIDList AND TagTranslation.envID = :environmentLangID;



selectRatingByEntityID:
SELECT
    Picture.rating
FROM
    Picture
WHERE
    Picture.id = :entityID;



countCommentsForPicture:
SELECT
    COUNT(*)
FROM
    Comment
WHERE
    Comment.contentID = :pictureRegisterID;



updateRating:
UPDATE
    Picture
SET
    rating = :rating
WHERE
    Picture.id = :id;



incrementRating:
UPDATE
    Picture
SET
    rating = rating + 1
WHERE
    Picture.id = :id;


decrementRating:
UPDATE
    Picture
SET
    rating = rating - 1
WHERE
    Picture.id = :id;