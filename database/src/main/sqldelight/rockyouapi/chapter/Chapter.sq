-- CREATE TABLE Chapter (
--   id INTEGER NOT NULL PRIMARY KEY,
--   storyID INTEGER NOT NULL,
--   title VARCHAR(255) NOT NULL,
--   languageID TINYINT UNSIGNED NOT NULL,
--   userID MEDIUMINT UNSIGNED NOT NULL,
--   rating MEDIUMINT NOT NULL DEFAULT 0,
--   text MEDIUMTEXT NOT NULL,
--   creationDate DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
--
-- --   FOREIGN KEY (id) REFERENCES ContentRegister(id)
-- --       ON DELETE CASCADE
-- --       ON UPDATE CASCADE,
-- --
-- --   FOREIGN KEY (storyID) REFERENCES Story(id)
-- --        ON DELETE CASCADE
-- --        ON UPDATE CASCADE,
-- --
-- --   FOREIGN KEY (languageID) REFERENCES Language(id),
-- --
-- --   FOREIGN KEY (userID) REFERENCES User(id)
-- );


selectChapterTextByRegisterID:
SELECT
    Chapter.text
FROM
    ContentRegister
INNER JOIN
    Chapter
    ON
    Chapter.id = ContentRegister.contentID
WHERE
    ContentRegister.id = :chapterRegisterID;



selectAllExceptTextByIDs:
SELECT
    Chapter.id,
    Chapter.title,
    Chapter.languageID,
    Chapter.userID,
    Chapter.rating
FROM
    Chapter
WHERE
    Chapter.id IN :registerIDs;



selectRatingByID:
SELECT
    Chapter.rating
FROM
    Chapter
WHERE
    Chapter.id = :chapterEntityID;



updateRating:
UPDATE
    Chapter
SET
    rating = :rating
WHERE
    Chapter.id = :chapterEntityID;



countCommentsForChapter:
SELECT
    COUNT(*)
FROM
    Comment
WHERE
    Comment.contentID = :chapterID;