-----------
CREATE TABLE IF NOT EXISTS DBVersion (
    version SMALLINT
);

INSERT INTO DBVersion(version) VALUES (2);
-----------



-----------
CREATE TABLE IF NOT EXISTS Language (
    id INTEGER NOT NULL PRIMARY KEY,
    isDefault BOOLEAN NOT NULL
);


CREATE TABLE IF NOT EXISTS LanguageTranslation (
    id INTEGER NOT NULL PRIMARY KEY,
    langID INTEGER NOT NULL,
    envID INTEGER NOT NULL,
    translation VARCHAR(255) NOT NULL,

    FOREIGN KEY (langID) REFERENCES Language(id)
        ON DELETE CASCADE
        ON UPDATE CASCADE,

    FOREIGN KEY (envID) REFERENCES Language(id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);
-----------



-----------
CREATE TABLE Tag (
    id INTEGER NOT NULL PRIMARY KEY
);


CREATE TABLE TagTranslation (
    id INTEGER NOT NULL PRIMARY KEY,
    tagID INTEGER NOT NULL,
    envID INTEGER NOT NULL,
    translation VARCHAR(255) NOT NULL,

    FOREIGN KEY (tagID) REFERENCES Tag(id)
        ON DELETE CASCADE
        ON UPDATE CASCADE,

    FOREIGN KEY (envID) REFERENCES Language(id)
         ON DELETE CASCADE
         ON UPDATE CASCADE
);
-----------



-----------
CREATE TABLE IF NOT EXISTS Content (
    id INTEGER NOT NULL PRIMARY KEY,
    originalID INTEGER DEFAULT NULL,
    contentType INTEGER NOT NULL,
    title VARCHAR(255) NOT NULL,
    description TEXT DEFAULT NULL,
    rating INTEGER NOT NULL DEFAULT 0,
    creationDate DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY (originalID) REFERENCES Content(id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);


CREATE TABLE IF NOT EXISTS ContentCharacter (
    id INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL
);
-----------



-----------
CREATE TABLE IF NOT EXISTS ContentGroup (
    id INTEGER NOT NULL PRIMARY KEY,
    title VARCHAR(255) NOT NULL
);
-----------



-----------
CREATE TABLE IF NOT EXISTS ContentGroupMember (
    id INTEGER NOT NULL PRIMARY KEY,
    groupID INTEGER NOT NULL,
    contentID INTEGER NOT NULL,
    orderIDX INTEGER NOT NULL,

   FOREIGN KEY (groupID) REFERENCES ContentGroup(id)
      ON DELETE CASCADE
      ON UPDATE CASCADE,

   FOREIGN KEY (contentID) REFERENCES Content(id)
       ON DELETE CASCADE
       ON UPDATE CASCADE
);
-----------



-----------
CREATE TABLE IF NOT EXISTS Author (
    id INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL
);
-----------



-----------
CREATE TABLE IF NOT EXISTS Tramslator (
    id INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL
);
-----------


-----------
CREATE TABLE IF NOT EXISTS Achvement (
    id INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT
);
-----------



-----------
CREATE TABLE IF NOT EXISTS UserRole (
    id INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE IF NOT EXISTS User (
    id INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    avatarURL VARCHAR(255),
    role INTEGER NOT NULL DEFAULT 1,
    registerDate DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,

   FOREIGN KEY (role) REFERENCES UserRole(id)
      ON DELETE CASCADE
      ON UPDATE CASCADE
);


CREATE UNIQUE INDEX UserName ON User(name);
-----------



-----------
CREATE TABLE IF NOT EXISTS AuthData (
    id INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT,
    userID INTEGER UNIQUE NOT NULL,
    passwordHash VARCHAR(255) NOT NULL,
    refreshToken TEXT DEFAULT NULL,

    FOREIGN KEY (userID) REFERENCES User(id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);
-----------



-----------
CREATE TABLE Comment (
    id INTEGER PRIMARY KEY AUTO_INCREMENT,
    contentID INTEGER NOT NULL,
    userID INTEGER NOT NULL,
    text TEXT NOT NULL,
    creationDate DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY (contentID) REFERENCES Content(id)
        ON DELETE CASCADE
        ON UPDATE CASCADE,

    FOREIGN KEY (userID) REFERENCES User(id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);
-----------



-----------
CREATE TABLE IF NOT EXISTS Favorite (
    id INTEGER PRIMARY KEY AUTO_INCREMENT,
    userID INTEGER NOT NULL,
    contentID INTEGER NOT NULL,
    creationDate DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY (userID) REFERENCES User(id)
        ON DELETE CASCADE
        ON UPDATE CASCADE,

    FOREIGN KEY (contentID) REFERENCES Content(id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);


CREATE UNIQUE INDEX FavoriteContentIndex ON Favorite(userID, contentID);
-----------



-----------
CREATE TABLE Report (
    id INTEGER PRIMARY KEY AUTO_INCREMENT NOT NULL,
    contentID INTEGER NOT NULL,
    userID INTEGER,
    reportText TEXT NOT NULL,
    isClosed BOOLEAN NOT NULL DEFAULT FALSE,
    creationDate DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY (contentID) REFERENCES Content(id)
        ON DELETE CASCADE
        ON UPDATE CASCADE,

    FOREIGN KEY (userID) REFERENCES User(id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);
-----------



-----------
CREATE TABLE UpdateContentInfoRequest (
    id INTEGER PRIMARY KEY AUTO_INCREMENT NOT NULL,
    contentID INTEGER NOT NULL,
    userID INTEGER NULL,
    requestText TEXT NOT NULL,
    isApproved BOOLEAN NOT NULL DEFAULT FALSE,
    isClosed BOOLEAN NOT NULL DEFAULT FALSE,
    resultText TEXT NULL,
    creationDate DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY (contentID) REFERENCES Content(id)
        ON DELETE CASCADE
        ON UPDATE CASCADE,

    FOREIGN KEY (userID) REFERENCES User(id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);
-----------



-----------
CREATE TABLE Upload (
    id INTEGER PRIMARY KEY AUTO_INCREMENT NOT NULL,
    userID INTEGER NULL DEFAULT NULL,
    fileName VARCHAR(255) NOT NULL,
    isApproved BOOLEAN NOT NULL DEFAULT FALSE,
    isClosed BOOLEAN NOT NULL DEFAULT FALSE,
    message TEXT NULL,
    creationDate DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY (userID) REFERENCES User(id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);
-----------



-----------
CREATE TABLE RelationUserAndAchivement (
    id INTEGER PRIMARY KEY AUTO_INCREMENT NOT NULL,
    userID INTEGER NOT NULL,
    achivementID INTEGER NOT NULL,

    FOREIGN KEY (userID) REFERENCES User(id)
        ON DELETE CASCADE
        ON UPDATE CASCADE,

    FOREIGN KEY (achivementID) REFERENCES Achvement(id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);
-----------



-----------
CREATE TABLE RelationContentAndAuthor (
    id INTEGER PRIMARY KEY AUTO_INCREMENT NOT NULL,
    contentID INTEGER NOT NULL,
    authorID INTEGER NOT NULL,

    FOREIGN KEY (contentID) REFERENCES Content(id)
        ON DELETE CASCADE
        ON UPDATE CASCADE,

    FOREIGN KEY (authorID) REFERENCES Author(id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);
-----------



-----------
CREATE TABLE RelationContentAndTranslator (
    id INTEGER PRIMARY KEY AUTO_INCREMENT NOT NULL,
    contentID INTEGER NOT NULL,
    translatorID INTEGER NOT NULL,

    FOREIGN KEY (contentID) REFERENCES Content(id)
        ON DELETE CASCADE
        ON UPDATE CASCADE,

    FOREIGN KEY (translatorID) REFERENCES Tramslator(id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);
-----------



-----------
CREATE TABLE RelationContentAndCharacter (
    id INTEGER PRIMARY KEY AUTO_INCREMENT NOT NULL,
    contentID INTEGER NOT NULL,
    characterID INTEGER NOT NULL,

    FOREIGN KEY (contentID) REFERENCES Content(id)
        ON DELETE CASCADE
        ON UPDATE CASCADE,

    FOREIGN KEY (characterID) REFERENCES ContentCharacter(id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);
-----------



-----------
CREATE TABLE RelationContentAndLanguage (
    id INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
    contentID INTEGER NOT NULL,
    languageID INTEGER NOT NULL,

    FOREIGN KEY (contentID) REFERENCES Content(id)
        ON DELETE CASCADE
        ON UPDATE CASCADE,

    FOREIGN KEY (languageID) REFERENCES Language(id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);
-----------



-----------
CREATE TABLE RelationContentAndTag(
    id INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
    contentID INTEGER NOT NULL,
    tagID INTEGER NOT NULL,
    isOneOfMainTag BOOLEAN NOT NULL DEFAULT FALSE,

    FOREIGN KEY (contentID) REFERENCES Content(id)
        ON DELETE CASCADE
        ON UPDATE CASCADE,

    FOREIGN KEY (tagID) REFERENCES Tag(id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);
-----------



-----------
CREATE TABLE VoteHistory (
    id INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
    contentID INTEGER NOT NULL,
    userID INTEGER NOT NULL,
    vote TINYINT NOT NULL,

    FOREIGN KEY (contentID) REFERENCES Content(id)
        ON DELETE CASCADE
        ON UPDATE CASCADE,

    FOREIGN KEY (userID) REFERENCES User(id)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

CREATE UNIQUE INDEX VoteHistoryIndex ON VoteHistory(userID, contentID);
-----------



-----------
CREATE TABLE Picture (
    id INTEGER NOT NULL PRIMARY KEY,
    url TEXT NOT NULL,
    languageID INTEGER,
    userID INTEGER,
    creationDate DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY (id) REFERENCES Content(id)
        ON DELETE CASCADE
        ON UPDATE CASCADE,

    FOREIGN KEY (languageID) REFERENCES Language(id),

    FOREIGN KEY (userID) REFERENCES User(id)
);
-----------



-----------
CREATE TABLE Video (
    id INTEGER NOT NULL PRIMARY KEY,
    url TEXT NOT NULL,
    languageID INTEGER,
    userID INTEGER NOT NULL,
    creationDate DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY (id) REFERENCES Content(id)
        ON DELETE CASCADE
        ON UPDATE CASCADE,

    FOREIGN KEY (languageID) REFERENCES Language(id),

    FOREIGN KEY (userID) REFERENCES User(id)
);
-----------


-----------
CREATE TABLE IF NOT EXISTS Story (
    id INTEGER NOT NULL PRIMARY KEY,
    languageID INTEGER NOT NULL,
    userID INTEGER NOT NULL,
    scheme TEXT NOT NULL,
    creationDate DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY (id) REFERENCES Content(id)
        ON DELETE CASCADE
        ON UPDATE CASCADE,

    FOREIGN KEY (languageID) REFERENCES Language(id),

    FOREIGN KEY (userID) REFERENCES User(id)
);
-----------



-----------
CREATE TABLE IF NOT EXISTS Chapter (
    id INTEGER NOT NULL PRIMARY KEY,
    storyID INTEGER NOT NULL,
    languageID INTEGER NOT NULL,
    userID INTEGER NOT NULL,
    text MEDIUMTEXT NOT NULL,
    creationDate DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY (id) REFERENCES Content(id)
        ON DELETE CASCADE
        ON UPDATE CASCADE,

    FOREIGN KEY (storyID) REFERENCES Story(id)
        ON DELETE CASCADE
        ON UPDATE CASCADE,

    FOREIGN KEY (languageID) REFERENCES Language(id),

    FOREIGN KEY (userID) REFERENCES User(id)
);
-----------